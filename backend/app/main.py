from fastapi import FastAPI, HTTPException, Request
from fastapi.responses import JSONResponse, FileResponse
from fastapi.middleware.cors import CORSMiddleware
from fastapi.openapi.utils import get_openapi
import logging
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ app –≤ sys.path
app_dir = Path(__file__).parent
sys.path.insert(0, str(app_dir))

# –ò–º–ø–æ—Ä—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
from app.core.config import settings
from app.middleware.i18n import I18nMiddleware

# –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–µ—Ä–æ–≤
from app.routers import i18n, math, ktp, math_game
from app.models.schemas import ErrorResponse

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO if not settings.debug else logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–Ω–∏–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = FastAPI(
    title=settings.app_name,
    version=settings.app_version,
    description="""
    üéì **–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —É—á–µ–±–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤**
    
    –ü—Ä–æ—Å—Ç–æ–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:
    
    ## üìä –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
    - –ê—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π (+, -, *, /)
    - –ì–∏–±–∫–∏–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã —á–∏—Å–µ–ª –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞–Ω–¥–æ–≤
    - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è PDF —Å –æ—Ç–≤–µ—Ç–∞–º–∏
    
    ## üìÖ –ö–¢–ü –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
    - –ö–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ-—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    - –£—á–µ—Ç –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤ –∏ –∫–∞–Ω–∏–∫—É–ª
    - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—Ä–æ–∫–æ–≤
    - –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –¥–∞—Ç
    
    ## üîß –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
    - REST API —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –¥–∞–Ω–Ω—ã—Ö
    - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    - –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –¥–ª—è –ª–µ–≥–∫–æ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
    """,
    docs_url="/docs" if settings.debug else None,
    redoc_url="/redoc" if settings.debug else None,
    openapi_url="/openapi.json" if settings.debug else None
)

# –î–æ–±–∞–≤–ª—è–µ–º middleware (–ø–æ—Ä—è–¥–æ–∫ –≤–∞–∂–µ–Ω! –ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–≤—ã–º)
# –î–æ–±–∞–≤–ª—è–µ–º i18n middleware
app.add_middleware(I18nMiddleware)

# CORS –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω –ü–û–°–õ–ï–î–ù–ò–ú, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –ü–ï–†–í–´–ú!
app.add_middleware(
    CORSMiddleware,
    allow_origins=[
        "http://localhost:8080", 
        "http://127.0.0.1:8080", 
        "http://localhost:3000", 
        "http://127.0.0.1:3000",
        "https://gorikon.ru",
        "http://gorikon.ru"
    ],
    allow_credentials=True,
    allow_methods=["GET", "POST", "PUT", "DELETE", "OPTIONS"],
    allow_headers=["*"],
)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤
app.include_router(i18n.router)      # –ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è
app.include_router(math.router)      # –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
app.include_router(ktp.router)       # –ö–¢–ü –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
app.include_router(math_game.router) # –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞
app.include_router(math.legacy_router)  # Legacy –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
app.include_router(ktp.legacy_router)   # Legacy –ö–¢–ü –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫
@app.exception_handler(HTTPException)
async def http_exception_handler(request, exc: HTTPException):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ HTTP –æ—à–∏–±–æ–∫"""
    error_response = ErrorResponse(
        message=exc.detail,
        error_code=f"HTTP_{exc.status_code}"
    )
    return JSONResponse(
        status_code=exc.status_code,
        content=error_response.dict()
    )

@app.exception_handler(ValueError)
async def value_error_handler(request, exc: ValueError):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"""
    error_response = ErrorResponse(
        message=f"–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {str(exc)}",
        error_code="VALIDATION_ERROR"
    )
    return JSONResponse(
        status_code=400,
        content=error_response.dict()
    )

@app.exception_handler(Exception)
async def general_exception_handler(request, exc: Exception):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—â–∏—Ö –æ—à–∏–±–æ–∫"""
    logger.error(f"–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(exc)}", exc_info=True)
    
    error_response = ErrorResponse(
        message="–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
        error_code="INTERNAL_ERROR",
        details={"error": str(exc)} if settings.debug else None
    )
    return JSONResponse(
        status_code=500,
        content=error_response.dict()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ OPTIONS –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è CORS
@app.options("/{full_path:path}")
async def options_handler(full_path: str):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ OPTIONS –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è CORS"""
    return {"message": "OK"}

# –û—Å–Ω–æ–≤–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
@app.get("/", tags=["–°–∏—Å—Ç–µ–º–∞"])
async def root():
    """–ö–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"""
    return {
        "app_name": settings.app_name,
        "version": settings.app_version,
        "status": "running",
        "docs_url": "/docs" if settings.debug else "disabled",
        "endpoints": {
            "i18n": "/api/i18n",
            "auth": "/api/auth",
            "analytics": "/api/analytics",
            "security": "/api/security",
            "math_generator": "/api/math/generate",
            "ktp_generator": "/api/ktp/generate"
        },
        "features": [
            "üåç –ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ (5 —è–∑—ã–∫–æ–≤)",
            "üßÆ –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏",
            "üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ-—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", 
            "‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
            "üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫"
        ]
    }

@app.get("/health", tags=["–°–∏—Å—Ç–µ–º–∞"])
async def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    return {
        "status": "healthy",
        "version": settings.app_version,
        "components": {
            "i18n": "multilingual",
            "generators": "ready"
        },
        "config": {
            "debug": settings.debug,
            "max_operands": settings.max_operands,
            "max_examples": settings.max_examples,
            "max_lessons_per_day": settings.max_lessons_per_day
        }
    }

@app.get("/api/info", tags=["API"])
async def api_info():
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± API"""
    return {
        "api_version": "2.0",
        "generators": {
            "math": {
                "endpoint": "/api/math/generate",
                "parameters": ["num_operands", "operations", "interval_start", "interval_end", "example_count"],
                "operations": ["+", "-", "*", "/"],
                "output_format": "PDF"
            },
            "ktp": {
                "endpoint": "/api/ktp/generate", 
                "parameters": ["start_date", "end_date", "weekdays", "lessons_per_day", "holidays", "vacation", "file_name"],
                "output_format": "Excel"
            }
        },
        "legacy_support": {
            "math": "/api/math/math-generator",
            "ktp": "/api/ktp/ktp-generator"
        }
    }

# –°–æ–±—ã—Ç–∏–µ –∑–∞–ø—É—Å–∫–∞
@app.on_event("startup")
async def startup_event():
    """–î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ {settings.app_name} v{settings.app_version}")
    logger.info(f"üîß –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏: {settings.debug}")
    logger.info(f"üìÅ –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞: {settings.temp_dir}")
    
    logger.info(f"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ .env")
    logger.info(f"üéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏: –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –ø—Ä–∏–º–µ—Ä–æ–≤ –∏ –ö–¢–ü")

# –°–æ–±—ã—Ç–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏  
@app.on_event("shutdown")
async def shutdown_event():
    """–î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    logger.info(f"üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ {settings.app_name}")

# –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è OpenAPI —Å—Ö–µ–º—ã
def custom_openapi():
    if app.openapi_schema:
        return app.openapi_schema
    
    openapi_schema = get_openapi(
        title=settings.app_name,
        version=settings.app_version,
        description=app.description,
        routes=app.routes,
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    openapi_schema["info"]["contact"] = {
        "name": "–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
        "url": "https://gorikon.ru",
    }
    
    openapi_schema["info"]["license"] = {
        "name": "MIT License",
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥–∏
    openapi_schema["tags"] = [
        {
            "name": "–ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è",
            "description": "–ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏"
        },
        {
            "name": "–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä",
            "description": "–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–º–µ—Ä–æ–≤"
        },
        {
            "name": "–ö–¢–ü –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä", 
            "description": "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ-—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"
        },
        {
            "name": "–°–∏—Å—Ç–µ–º–∞",
            "description": "–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è"
        },
        {
            "name": "API",
            "description": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± API –∏ –µ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö"
        }
    ]
    
    app.openapi_schema = openapi_schema
    return app.openapi_schema

app.openapi = custom_openapi

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(
        "main:app",
        host="0.0.0.0",
        port=8000,
        reload=settings.debug,
        log_level="debug" if settings.debug else "info"
    ) 